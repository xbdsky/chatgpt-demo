---

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="zh-CN">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		{ import.meta.env.HEAD_SCRIPTS ? <Fragment set:html={import.meta.env.HEAD_SCRIPTS} /> : null }
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	html {
		font-family: system-ui, sans-serif;
		background-color: #fbfbfb;
		color: #ffffff;
	}
	html.dark {
	        background-color: #212129;
	        color: #ddddf0;
	        scrollbar-color: #333333;
	}
	main {
		max-width: 70ch;
		margin: 0 auto;
		padding: 0rem 2rem 4rem 2rem;
	}
</style>
	
<script>
const initTheme = () => {
  const darkSchema
    = window.matchMedia
    && window.matchMedia('(prefers-color-scheme: dark)').matches
  const storageTheme = localStorage.getItem('theme')
  if (storageTheme) {
    document.documentElement.classList.toggle(
      'dark',
      storageTheme === 'dark',
    )
  } else {
    document.documentElement.classList.toggle('dark', darkSchema)
  }
}

initTheme()
</script>
